# generated by datamodel-codegen:
#   filename:  billing_cycle_started_event_schema.json
#   timestamp: 2022-05-19T09:20:55+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Optional

from pydantic import (
    BaseModel,
    Field,
)


class EventTitleBillingCycleStarted(Enum):
    BILLING_CYCLE_STARTED = "BILLING_CYCLE.STARTED"


class BillingCycleStatus(Enum):
    ACTIVE = "ACTIVE"
    CLOSED = "CLOSED"
    PROCESSED = "PROCESSED"


class BillingCycleDataSchema(BaseModel):
    public_id: str = Field(..., title="Public Id")
    status: BillingCycleStatus
    started_at: datetime = Field(..., title="Started At")
    closed_at: Optional[datetime] = Field(None, title="Closed At")
    processed_at: Optional[datetime] = Field(None, title="Processed At")


class AccountingProducer(Enum):
    POPUG_ACCOUNTING = "POPUG_ACCOUNTING"


class BillingCycleStartedEventSchema(BaseModel):
    version: Optional[int] = Field(1, title="Version")
    produced_at: Optional[datetime] = Field(None, title="Produced At")
    title: Optional[EventTitleBillingCycleStarted] = "BILLING_CYCLE.STARTED"
    data: BillingCycleDataSchema
    producer: Optional[AccountingProducer] = "POPUG_ACCOUNTING"
