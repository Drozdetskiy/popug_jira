# generated by datamodel-codegen:
#   filename:  task_completed_event_schema.json
#   timestamp: 2022-05-19T09:20:55+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Optional

from pydantic import (
    BaseModel,
    Field,
)


class EventTitleTaskCompleted(Enum):
    TASK_COMPLETED = "TASK.COMPLETED"


class TaskStatus1(Enum):
    OPEN = "OPEN"
    DONE = "DONE"


class TaskStatusChangedDataSchema(BaseModel):
    public_id: str = Field(..., title="Public Id")
    assignee_public_id: str = Field(..., title="Assignee Public Id")
    old_status: TaskStatus1
    new_status: TaskStatus1


class TaskProducer(Enum):
    POPUG_TASKKEEPER = "POPUG_TASKKEEPER"


class TaskCompletedEventSchema(BaseModel):
    version: Optional[int] = Field(1, title="Version")
    produced_at: Optional[datetime] = Field(None, title="Produced At")
    title: Optional[EventTitleTaskCompleted] = "TASK.COMPLETED"
    data: TaskStatusChangedDataSchema
    producer: Optional[TaskProducer] = "POPUG_TASKKEEPER"
